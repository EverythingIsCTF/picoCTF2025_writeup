from pwn import *
import random
import time

def get_random(length, seed):
    alphabet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
    random.seed(seed)
    return "".join(random.choice(alphabet) for _ in range(length))

# Connect to the remote server
host = 'verbal-sleep.picoctf.net'
port = 58978

# Capture the local time in milliseconds just before connecting
t_start = int(time.time() * 1000)
r = remote(host, port)

print(f"Captured local start time (ms): {t_start}")

# Estimate delay (network latency + server processing)
estimated_delay = 15  # Adjusted to account for typical network delay

# Generate 50 guesses based on t_start, starting at estimated_delay
guesses = []
for i in range(0, 50):
    seed = t_start + estimated_delay + i  # Covers t_start + 15 to t_start + 64
    token = get_random(20, seed)
    guesses.append(token)

# Read initial server messages until the first prompt
while True:
    line = r.recvline().decode().strip()
    print(line)
    if "Can you guess the token?" in line:
        break

# Send each guess and check the response
for idx, guess in enumerate(guesses):
    print(f"Sending guess {idx + 1}: {guess}")
    r.sendline(guess.encode())
    
    while True:
        line = r.recvline().decode().strip()
        print(line)
        
        if "Enter your guess for the token (or exit):" in line:
            break
        
        elif "Congratulations" in line or "flag" in line.lower():
            if "picoCTF" in line:
                print(f"Flag found in line: {line}")
            else:
                flag = r.recvline().decode().strip()
                print(f"Flag: {flag}")
            r.close()
            exit(0)
        
        elif "exhausted" in line or "too many" in line:
            print("All attempts used up.")
            r.close()
            exit(1)

print("Failed to find the correct token within 50 attempts.")
r.close()